FE 62 69 6E 73 86 40 60 0F 01 00 00 00 79 00 00
00 7D 00 00 00 01 00 04 00 38 2E 30 2E 32 33 00
00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00
00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00
00 00 00 00 00 00 00 00 00 00 00 73 86 40 60 13
00 0D 00 08 00 00 00 00 04 00 04 00 00 00 61 00
04 1A 08 00 00 00 08 08 08 02 00 00 00 0A 0A 0A
2A 2A 00 12 34 00 0A 28 01 4C 53 17 C2

===============================================

若使用n字节来存储一个信息的，则需要使用小端模式解析。
若比如像字符那样子的，则不需要使用小端模式。

FE 62 69 6E：
4位魔数 = 254 98 105 110 = 0xFE bin 

FE 在16进制中表示保留符号

===============================================

xx xx xx xx 73 86 40 60 0F 01 00 00 00 79 00 00
00 7D 00 00 00 01 00

事件头部信息（固定长度 19 字节）

73 86 40 60 => 60 40 86 73 => 1614841459 => 2021-03-04 15:04:19
生成 binlog 的时间戳

0F => 15
类型码（typeCode）V1、V3的值为1，表示开始事件；V4的值为15，表示格式描述事件

01 00 00 00 => 00 00 00 01 => 1
MySQL服务器id（server_id）

79 00 00 00 => 00 00 00 79 => 121
事件长度（event_length）

7D 00 00 00 => 00 00 00 7D => 125
下一个事件的位置（next_position）
（打开工具，show binlog events，查看第一行的格式描述时间的长度，若不等于该长度，检查是不是算错了）

01 00 => 00 01 => 1
标志位（flags）

其实 flags 后还有一个 extra_headers，是V3后的字段；
但目前来说，截止到8.0.23为止，所有的 extra_headers 都是空的。

===============================================

event_length - header => 125 - 19 = 106

xx xx xx xx xx xx xx 04 00 38 2E 30 2E 32 33 00
00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00
00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00
00 00 00 00 00 00 00 00 00 00 00 73 86 40 60 13
00 0D 00 08 00 00 00 00 04 00 04 00 00 00 61 00
04 1A 08 00 00 00 08 08 08 02 00 00 00 0A 0A 0A
2A 2A 00 12 34 00 0A 28 01 4C 53 17 C2
事件内容（106字节）

04 00 => 00 04 => 4
binlog 版本（V4）（binlog_version：2字节）

xx xx xx xx xx xx xx xx xx 38 2E 30 2E 32 33 00
00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00
00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00
00 00 00 00 00 00 00 00 00 00 00
=> 38 2E 30 2E 32 33 => 56 46 48 46 50 51 => 8.0.23
MySQL 服务器版本（server_version：50字节）

73 86 40 60 => 60 40 86 73 => 1614841459 => 2021-03-04 15:04:19
事件创建时间（create_timestamp：4字节）

13 => 19
事件头部长度（header_length：1字节）

00 0D 00 08 00 00 00 00 04 00 04 00 00 00 61 00
04 1A 08 00 00 00 08 08 08 02 00 00 00 0A 0A 0A
2A 2A 00 12 
post-header lengths for all event types（所有事件的长度，总共36个事件）

为什么会多出这5个字节出来 ？？？？？？？？？想不通
34 00 0A 28 01

4C 53 17 C2
校验位（4字节）（所以实际内容只有121长度）

===============================================